<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>基于Progit的git有关学习</title>
    <url>/2023/07/26/%E5%9F%BA%E4%BA%8EProgit%E7%9A%84git%E6%9C%89%E5%85%B3%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h2 id="Git-基础"><a href="#Git-基础" class="headerlink" title="Git 基础"></a>Git 基础</h2><h3 id="获取-git-仓库"><a href="#获取-git-仓库" class="headerlink" title="获取 git 仓库"></a>获取 git 仓库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure>

<p>该命令创建.git 文件夹，这个子目录含有你初始化 Git 仓库中所有的必须文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add *.c</span><br><span class="line">git add chapter2.md</span><br><span class="line">git commit -m <span class="string">&quot;initial project version&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Untracked files <span class="comment"># 未追踪状态，修改文件还没add</span></span><br><span class="line"></span><br><span class="line">Changes to be committed <span class="comment"># add后的状态，放入暂存区</span></span><br><span class="line"></span><br><span class="line">Changes not staged <span class="keyword">for</span> commit <span class="comment"># 已跟踪的文件发生了变化，但还没有放入暂存区，要暂存这次更新需要add命令</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git status -s</span><br><span class="line">git status --short <span class="comment"># 更紧凑的格式输出</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>忽略文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建.gitignore文件，列出要忽略的文件模式</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git diff <span class="comment"># 当前做的哪些更新还没暂存;哪些跟新已经暂存还没提交</span></span><br><span class="line">git diff --stage <span class="comment"># 查看已暂存的将要添加到下次提交里的内容</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global core.editor <span class="comment"># git commit后通过此命令设定你喜欢的编辑器，例如vim</span></span><br></pre></td></tr></table></figure>

<p>跳过使用暂存区域</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit -a -m <span class="string">&quot;描述&quot;</span> <span class="comment"># Git 就会自动把所有已经跟踪过的文件暂存起来一并提交，跳过git add步骤</span></span><br></pre></td></tr></table></figure>

<p>移除文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">rm</span> <span class="comment"># 要从Git中移除某个文件，就必须要从已跟踪文件清单中移除(确切地说，是从暂存区域移除)然后提交</span></span><br><span class="line">git <span class="built_in">rm</span> -f <span class="comment"># 如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f</span></span><br><span class="line">git <span class="built_in">rm</span> --cached <span class="comment"># 我们想把文件从 Git 仓库中删除（亦即从暂存区域移除），但仍然希望保留在当前工作目录中。你想让文件保留在磁盘，但是并不想让 Git 继续跟踪</span></span><br></pre></td></tr></table></figure>

<p>移动文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">运行 git <span class="built_in">mv</span> 就相当于运行了下面三条命令</span><br><span class="line"><span class="built_in">mv</span> README.md README</span><br><span class="line">git <span class="built_in">rm</span> README.md</span><br><span class="line">git add README</span><br></pre></td></tr></table></figure>

<h3 id="查看提交历史"><a href="#查看提交历史" class="headerlink" title="查看提交历史"></a>查看提交历史</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">log</span> <span class="comment"># 拓展很多，按需查看</span></span><br><span class="line">git <span class="built_in">log</span> -p <span class="comment"># 用来显示每次提交的内容差异</span></span><br><span class="line">git <span class="built_in">log</span> -2 <span class="comment"># 仅显示最近两次提交</span></span><br><span class="line">git <span class="built_in">log</span> --<span class="built_in">stat</span> <span class="comment"># 每次提交的简略的统计信息</span></span><br></pre></td></tr></table></figure>

<h3 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git commit --amend <span class="comment"># 这个命令会将暂存区中的文件提交。如果自上次提交以来你还未做任何修改(例如，在上次提交后马上执行了此命令)，那么快照会保持不变，而你所修改的只是提交信息</span></span><br></pre></td></tr></table></figure>

<p>取消暂存的文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git reset HEAD &lt;fire&gt; <span class="comment"># 取消暂存</span></span><br></pre></td></tr></table></figure>

<p>撤销对文件的修改</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git checkout -- &lt;fire&gt; <span class="comment">#</span></span><br></pre></td></tr></table></figure>

<h3 id="远程仓库的使用"><a href="#远程仓库的使用" class="headerlink" title="远程仓库的使用"></a>远程仓库的使用</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote -v <span class="comment"># 显示需要读写远程仓库使用的 Git 保存的简写与其对应的 URL</span></span><br><span class="line">git remote add &lt;shortname&gt; &lt;url&gt; <span class="comment"># 添加一个新的远程Git仓库，同时指定一个你可以轻松引用的简写</span></span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git fetch [remote-name] <span class="comment"># 这个命令会访问远程仓库，从中拉取所有你还没有的数据。执行完成后，你将会拥有那个远程仓库中所有分支的引用，可以随时合并或查看。它并不会自动合并或修改你当前的工作</span></span><br><span class="line">git pull <span class="comment"># 会从最初克隆的服务器上抓取数据并自动尝试合并到当前所在的分支</span></span><br></pre></td></tr></table></figure>

<p>推送远程仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git push [remote-name] [branch-name]</span><br></pre></td></tr></table></figure>

<p>查看远程仓库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote show [remote-name]</span><br></pre></td></tr></table></figure>

<p>远程仓库的移除与重命名</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git remote rename name1 name2 <span class="comment"># 修改远程仓库的简写名，将name1改为name2</span></span><br><span class="line">git remote <span class="built_in">rm</span> name1 <span class="comment">#  想要移除一个远程仓库name1</span></span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>luojun-lifepath</title>
    <url>/2023/07/23/luojun-lifepath/</url>
    <content><![CDATA[<h3 id="记录生活方式"><a href="#记录生活方式" class="headerlink" title="记录生活方式"></a>记录生活方式</h3><h4 id="你的职业"><a href="#你的职业" class="headerlink" title="你的职业"></a>你的职业</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SSD </span><br></pre></td></tr></table></figure>



<h4 id="生活方式"><a href="#生活方式" class="headerlink" title="生活方式"></a>生活方式</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">成为更好的自己</span><br></pre></td></tr></table></figure>



<h4 id="未来计划"><a href="#未来计划" class="headerlink" title="未来计划"></a>未来计划</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">年底存够10w</span><br></pre></td></tr></table></figure>



<h4 id="个人爱好"><a href="#个人爱好" class="headerlink" title="个人爱好"></a>个人爱好</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">热爱编程，拥抱技术</span><br><span class="line">为未来高楼筑地基</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/07/22/hello-world/</url>
    <content><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
